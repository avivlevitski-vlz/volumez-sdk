// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"github.com/avivlevitski-vlz/volumez-sdk/models/components"
)

type Consistency string

const (
	ConsistencyCrash       Consistency = "crash"
	ConsistencyApplication Consistency = "application"
)

func (e Consistency) ToPointer() *Consistency {
	return &e
}
func (e *Consistency) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "crash":
		fallthrough
	case "application":
		*e = Consistency(v)
		return nil
	default:
		return fmt.Errorf("invalid value for Consistency: %v", v)
	}
}

// ConsistencyGroupSnapshotCreateRequestBody - A Snapshot object
type ConsistencyGroupSnapshotCreateRequestBody struct {
	Name        *string      `json:"name,omitempty"`
	Consistency *Consistency `json:"consistency,omitempty"`
	GroupName   *string      `json:"group_name,omitempty"`
	Volumes     []string     `json:"volumes,omitempty"`
}

func (o *ConsistencyGroupSnapshotCreateRequestBody) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *ConsistencyGroupSnapshotCreateRequestBody) GetConsistency() *Consistency {
	if o == nil {
		return nil
	}
	return o.Consistency
}

func (o *ConsistencyGroupSnapshotCreateRequestBody) GetGroupName() *string {
	if o == nil {
		return nil
	}
	return o.GroupName
}

func (o *ConsistencyGroupSnapshotCreateRequestBody) GetVolumes() []string {
	if o == nil {
		return nil
	}
	return o.Volumes
}

type ConsistencyGroupSnapshotCreateResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// New snapshot was created successfully
	RegularResponse *components.RegularResponse
	Headers         map[string][]string
}

func (o *ConsistencyGroupSnapshotCreateResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *ConsistencyGroupSnapshotCreateResponse) GetRegularResponse() *components.RegularResponse {
	if o == nil {
		return nil
	}
	return o.RegularResponse
}

func (o *ConsistencyGroupSnapshotCreateResponse) GetHeaders() map[string][]string {
	if o == nil {
		return map[string][]string{}
	}
	return o.Headers
}
