// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

type VirtualMediaFlavor string

const (
	VirtualMediaFlavorStripped VirtualMediaFlavor = "stripped"
	VirtualMediaFlavorRaid1    VirtualMediaFlavor = "raid1"
)

func (e VirtualMediaFlavor) ToPointer() *VirtualMediaFlavor {
	return &e
}
func (e *VirtualMediaFlavor) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "stripped":
		fallthrough
	case "raid1":
		*e = VirtualMediaFlavor(v)
		return nil
	default:
		return fmt.Errorf("invalid value for VirtualMediaFlavor: %v", v)
	}
}

type VirtualMedia struct {
	Media   *Media              `json:"media,omitempty"`
	Flavor  *VirtualMediaFlavor `json:"flavor,omitempty"`
	Members []string            `json:"members,omitempty"`
}

func (o *VirtualMedia) GetMedia() *Media {
	if o == nil {
		return nil
	}
	return o.Media
}

func (o *VirtualMedia) GetFlavor() *VirtualMediaFlavor {
	if o == nil {
		return nil
	}
	return o.Flavor
}

func (o *VirtualMedia) GetMembers() []string {
	if o == nil {
		return nil
	}
	return o.Members
}
