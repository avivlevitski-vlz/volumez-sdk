// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

type Consistency string

const (
	ConsistencyCrash       Consistency = "crash"
	ConsistencyApplication Consistency = "application"
)

func (e Consistency) ToPointer() *Consistency {
	return &e
}
func (e *Consistency) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "crash":
		fallthrough
	case "application":
		*e = Consistency(v)
		return nil
	default:
		return fmt.Errorf("invalid value for Consistency: %v", v)
	}
}

type Snapshot struct {
	Volumename           *string     `json:"volumename,omitempty"`
	Volumeid             *string     `json:"volumeid,omitempty"`
	Volumesize           *int64      `json:"volumesize,omitempty"`
	Name                 string      `json:"name"`
	Snapshotid           *string     `json:"snapshotid,omitempty"`
	Targetsecret         *string     `json:"targetsecret,omitempty"`
	Consistency          Consistency `json:"consistency"`
	Time                 *string     `json:"time,omitempty"`
	Policy               *bool       `json:"policy,omitempty"`
	Consistencygroup     *bool       `json:"consistencygroup,omitempty"`
	Consistencygroupname *string     `json:"consistencygroupname,omitempty"`
	Used                 *int64      `json:"used,omitempty"`
	State                *string     `json:"state,omitempty"`
	Status               *string     `json:"status,omitempty"`
	Progress             *int64      `json:"progress,omitempty"`
	Numberofattachments  *int64      `json:"numberofattachments,omitempty"`
}

func (o *Snapshot) GetVolumename() *string {
	if o == nil {
		return nil
	}
	return o.Volumename
}

func (o *Snapshot) GetVolumeid() *string {
	if o == nil {
		return nil
	}
	return o.Volumeid
}

func (o *Snapshot) GetVolumesize() *int64 {
	if o == nil {
		return nil
	}
	return o.Volumesize
}

func (o *Snapshot) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *Snapshot) GetSnapshotid() *string {
	if o == nil {
		return nil
	}
	return o.Snapshotid
}

func (o *Snapshot) GetTargetsecret() *string {
	if o == nil {
		return nil
	}
	return o.Targetsecret
}

func (o *Snapshot) GetConsistency() Consistency {
	if o == nil {
		return Consistency("")
	}
	return o.Consistency
}

func (o *Snapshot) GetTime() *string {
	if o == nil {
		return nil
	}
	return o.Time
}

func (o *Snapshot) GetPolicy() *bool {
	if o == nil {
		return nil
	}
	return o.Policy
}

func (o *Snapshot) GetConsistencygroup() *bool {
	if o == nil {
		return nil
	}
	return o.Consistencygroup
}

func (o *Snapshot) GetConsistencygroupname() *string {
	if o == nil {
		return nil
	}
	return o.Consistencygroupname
}

func (o *Snapshot) GetUsed() *int64 {
	if o == nil {
		return nil
	}
	return o.Used
}

func (o *Snapshot) GetState() *string {
	if o == nil {
		return nil
	}
	return o.State
}

func (o *Snapshot) GetStatus() *string {
	if o == nil {
		return nil
	}
	return o.Status
}

func (o *Snapshot) GetProgress() *int64 {
	if o == nil {
		return nil
	}
	return o.Progress
}

func (o *Snapshot) GetNumberofattachments() *int64 {
	if o == nil {
		return nil
	}
	return o.Numberofattachments
}

type SnapshotInput struct {
	Volumename           *string     `json:"volumename,omitempty"`
	Name                 string      `json:"name"`
	Targetsecret         *string     `json:"targetsecret,omitempty"`
	Consistency          Consistency `json:"consistency"`
	Time                 *string     `json:"time,omitempty"`
	Policy               *bool       `json:"policy,omitempty"`
	Consistencygroup     *bool       `json:"consistencygroup,omitempty"`
	Consistencygroupname *string     `json:"consistencygroupname,omitempty"`
	Used                 *int64      `json:"used,omitempty"`
}

func (o *SnapshotInput) GetVolumename() *string {
	if o == nil {
		return nil
	}
	return o.Volumename
}

func (o *SnapshotInput) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *SnapshotInput) GetTargetsecret() *string {
	if o == nil {
		return nil
	}
	return o.Targetsecret
}

func (o *SnapshotInput) GetConsistency() Consistency {
	if o == nil {
		return Consistency("")
	}
	return o.Consistency
}

func (o *SnapshotInput) GetTime() *string {
	if o == nil {
		return nil
	}
	return o.Time
}

func (o *SnapshotInput) GetPolicy() *bool {
	if o == nil {
		return nil
	}
	return o.Policy
}

func (o *SnapshotInput) GetConsistencygroup() *bool {
	if o == nil {
		return nil
	}
	return o.Consistencygroup
}

func (o *SnapshotInput) GetConsistencygroupname() *string {
	if o == nil {
		return nil
	}
	return o.Consistencygroupname
}

func (o *SnapshotInput) GetUsed() *int64 {
	if o == nil {
		return nil
	}
	return o.Used
}
