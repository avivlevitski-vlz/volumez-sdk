// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

type Media struct {
	Mediaid       *string `json:"mediaid,omitempty"`
	Size          *int64  `json:"size,omitempty"`
	Model         *string `json:"model,omitempty"`
	Media         *string `json:"media,omitempty"`
	Bus           *string `json:"bus,omitempty"`
	Location      *string `json:"location,omitempty"`
	Sed           *bool   `json:"sed,omitempty"`
	Node          *string `json:"node,omitempty"`
	Cloudprovider *string `json:"cloudprovider,omitempty"`
	// the media node ResourceNamespace
	AccountID *string `json:"accountID,omitempty"`
	Region    *string `json:"region,omitempty"`
	Zone      *string `json:"zone,omitempty"`
	// the media node ResourceNamespace
	ResourceNamespace *string `json:"ResourceNamespace,omitempty"`
	// the media node PhysicalProximityGroup
	PhysicalProximityGroup *string `json:"PhysicalProximityGroup,omitempty"`
	// the media node ResiliencyDomain
	ResiliencyDomain *string `json:"ResiliencyDomain,omitempty"`
	// the media node FaultDomain
	FaultDomain        *string `json:"FaultDomain,omitempty"`
	Firmware           *string `json:"firmware,omitempty"`
	Sectorsize         *int64  `json:"sectorsize,omitempty"`
	Iopsread           *int64  `json:"iopsread,omitempty"`
	Iopswrite          *int64  `json:"iopswrite,omitempty"`
	Bandwidthread      *int64  `json:"bandwidthread,omitempty"`
	Bandwidthwrite     *int64  `json:"bandwidthwrite,omitempty"`
	BandwidthReserved  *int64  `json:"BandwidthReserved,omitempty"`
	Latencyread        *int64  `json:"latencyread,omitempty"`
	Latencywrite       *int64  `json:"latencywrite,omitempty"`
	Offlinetime        *string `json:"offlinetime,omitempty"`
	Freesize           *int64  `json:"freesize,omitempty"`
	Freeiopsread       *int64  `json:"freeiopsread,omitempty"`
	Freeiopswrite      *int64  `json:"freeiopswrite,omitempty"`
	Freebandwidthread  *int64  `json:"freebandwidthread,omitempty"`
	Freebandwidthwrite *int64  `json:"freebandwidthwrite,omitempty"`
	// count of how many volumes are using the media
	Volumescount *int64  `json:"volumescount,omitempty"`
	Assignment   *string `json:"assignment,omitempty"`
	State        *string `json:"state,omitempty"`
	Status       *string `json:"status,omitempty"`
	Progress     *int64  `json:"progress,omitempty"`
	// the capacity group this media belongs to
	Capacitygroup *string `json:"capacitygroup,omitempty"`
	// Available LBA formats for the media â€” ensure the block size specified in the media assignment matches one of these formats
	Lbaformats []string `json:"lbaformats,omitempty"`
}

func (o *Media) GetMediaid() *string {
	if o == nil {
		return nil
	}
	return o.Mediaid
}

func (o *Media) GetSize() *int64 {
	if o == nil {
		return nil
	}
	return o.Size
}

func (o *Media) GetModel() *string {
	if o == nil {
		return nil
	}
	return o.Model
}

func (o *Media) GetMedia() *string {
	if o == nil {
		return nil
	}
	return o.Media
}

func (o *Media) GetBus() *string {
	if o == nil {
		return nil
	}
	return o.Bus
}

func (o *Media) GetLocation() *string {
	if o == nil {
		return nil
	}
	return o.Location
}

func (o *Media) GetSed() *bool {
	if o == nil {
		return nil
	}
	return o.Sed
}

func (o *Media) GetNode() *string {
	if o == nil {
		return nil
	}
	return o.Node
}

func (o *Media) GetCloudprovider() *string {
	if o == nil {
		return nil
	}
	return o.Cloudprovider
}

func (o *Media) GetAccountID() *string {
	if o == nil {
		return nil
	}
	return o.AccountID
}

func (o *Media) GetRegion() *string {
	if o == nil {
		return nil
	}
	return o.Region
}

func (o *Media) GetZone() *string {
	if o == nil {
		return nil
	}
	return o.Zone
}

func (o *Media) GetResourceNamespace() *string {
	if o == nil {
		return nil
	}
	return o.ResourceNamespace
}

func (o *Media) GetPhysicalProximityGroup() *string {
	if o == nil {
		return nil
	}
	return o.PhysicalProximityGroup
}

func (o *Media) GetResiliencyDomain() *string {
	if o == nil {
		return nil
	}
	return o.ResiliencyDomain
}

func (o *Media) GetFaultDomain() *string {
	if o == nil {
		return nil
	}
	return o.FaultDomain
}

func (o *Media) GetFirmware() *string {
	if o == nil {
		return nil
	}
	return o.Firmware
}

func (o *Media) GetSectorsize() *int64 {
	if o == nil {
		return nil
	}
	return o.Sectorsize
}

func (o *Media) GetIopsread() *int64 {
	if o == nil {
		return nil
	}
	return o.Iopsread
}

func (o *Media) GetIopswrite() *int64 {
	if o == nil {
		return nil
	}
	return o.Iopswrite
}

func (o *Media) GetBandwidthread() *int64 {
	if o == nil {
		return nil
	}
	return o.Bandwidthread
}

func (o *Media) GetBandwidthwrite() *int64 {
	if o == nil {
		return nil
	}
	return o.Bandwidthwrite
}

func (o *Media) GetBandwidthReserved() *int64 {
	if o == nil {
		return nil
	}
	return o.BandwidthReserved
}

func (o *Media) GetLatencyread() *int64 {
	if o == nil {
		return nil
	}
	return o.Latencyread
}

func (o *Media) GetLatencywrite() *int64 {
	if o == nil {
		return nil
	}
	return o.Latencywrite
}

func (o *Media) GetOfflinetime() *string {
	if o == nil {
		return nil
	}
	return o.Offlinetime
}

func (o *Media) GetFreesize() *int64 {
	if o == nil {
		return nil
	}
	return o.Freesize
}

func (o *Media) GetFreeiopsread() *int64 {
	if o == nil {
		return nil
	}
	return o.Freeiopsread
}

func (o *Media) GetFreeiopswrite() *int64 {
	if o == nil {
		return nil
	}
	return o.Freeiopswrite
}

func (o *Media) GetFreebandwidthread() *int64 {
	if o == nil {
		return nil
	}
	return o.Freebandwidthread
}

func (o *Media) GetFreebandwidthwrite() *int64 {
	if o == nil {
		return nil
	}
	return o.Freebandwidthwrite
}

func (o *Media) GetVolumescount() *int64 {
	if o == nil {
		return nil
	}
	return o.Volumescount
}

func (o *Media) GetAssignment() *string {
	if o == nil {
		return nil
	}
	return o.Assignment
}

func (o *Media) GetState() *string {
	if o == nil {
		return nil
	}
	return o.State
}

func (o *Media) GetStatus() *string {
	if o == nil {
		return nil
	}
	return o.Status
}

func (o *Media) GetProgress() *int64 {
	if o == nil {
		return nil
	}
	return o.Progress
}

func (o *Media) GetCapacitygroup() *string {
	if o == nil {
		return nil
	}
	return o.Capacitygroup
}

func (o *Media) GetLbaformats() []string {
	if o == nil {
		return nil
	}
	return o.Lbaformats
}
