// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

type VirtualMediaCreateFlavor string

const (
	VirtualMediaCreateFlavorStripped VirtualMediaCreateFlavor = "stripped"
	VirtualMediaCreateFlavorRaid1    VirtualMediaCreateFlavor = "raid1"
	VirtualMediaCreateFlavorSplit    VirtualMediaCreateFlavor = "split"
)

func (e VirtualMediaCreateFlavor) ToPointer() *VirtualMediaCreateFlavor {
	return &e
}
func (e *VirtualMediaCreateFlavor) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "stripped":
		fallthrough
	case "raid1":
		fallthrough
	case "split":
		*e = VirtualMediaCreateFlavor(v)
		return nil
	default:
		return fmt.Errorf("invalid value for VirtualMediaCreateFlavor: %v", v)
	}
}

type VirtualMediaCreate struct {
	Selector *string                   `json:"selector,omitempty"`
	Flavor   *VirtualMediaCreateFlavor `json:"flavor,omitempty"`
}

func (o *VirtualMediaCreate) GetSelector() *string {
	if o == nil {
		return nil
	}
	return o.Selector
}

func (o *VirtualMediaCreate) GetFlavor() *VirtualMediaCreateFlavor {
	if o == nil {
		return nil
	}
	return o.Flavor
}
